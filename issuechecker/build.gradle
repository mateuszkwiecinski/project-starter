import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.starter.library.kotlin'
    id 'kotlin-kapt'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.6"
    implementation "com.squareup.okhttp3:okhttp:4.6.0"
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.retrofit2:converter-moshi:2.8.1"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.2"

    testImplementation "com.squareup.okhttp3:mockwebserver:4.6.0"
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = 'com.project.starter'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/mateuszkwiecinski/project-starter.git'
        version {
            name = project.version
        }
    }
    publications = ['mavenJava']
}

publishing {
    repositories {
        maven {
            name = 'github'
            setUrl('https://maven.pkg.github.com/mateuszkwiecinski/project-starter')
            credentials {
                username 'mateuszkwiecinski'
                password project.findProperty('GH_TOKEN') ?: ''
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
